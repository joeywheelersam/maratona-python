Aula 01 - Variables, Data Types and Operators

Variables (variável): armazena valores (dados) e reutilizar esses valores no nosso código.

Data Types (tipos de dados)
    Numbers (números): tipos numéricos (3, -20 ou 10.50).
    Strings (texto): tipo de texto, aspas duplas ou aspas simples ("Jomar" ou 'Jomar').
    Boolean: tipo booleano que seria verdadeiro ou falso (True ou False).
    None: não tem nenhum valor.

Operators (operadores): operações que podemos fazer entre os tipos de dados (+ - / %)
    Obs.: conseguimos concatenar duas strings usando o operador de soma ( + )

Materiais de Apoio:
    Documentação em Inglês: https://docs.python.org/3/
    Documentação em Português: https://docs.python.org/pt-br/3/
    Variables - https://www.w3schools.com/python/python_variables.asp
    Data Types - https://www.w3schools.com/python/python_datatypes.asp
    Operators - https://www.w3schools.com/python/python_operators.asp
    PEP8 - https://peps.python.org/pep-0008/

===============================================================================

Aula 02 - Lists and Tuples

Lists (listas): sequencia de valores, lembrando que o primeiro elemento começa com 0, conseguimos mexer na lista.
Tuples (lista): uma lista que não tem os métodos, não conseguimos editar, geralmente usamos para dias da semana ou meses.

Anatomia:
    Lists
        variavel = ["Dado 1","Dado 2"]
    Tuples
        variavel = ("Dado 1", "Dado 2")

Materiais de Apoio:
    Lists - https://www.w3schools.com/python/python_lists.asp
    Tuples - https://www.w3schools.com/python/python_tuples.asp

===============================================================================

Aula 03 - Dictionaries / Dicts (dicionários): coleção com elementos.

Anatomia:
    variavel = {
        "Chave 1": valor,
        "Chave 2": valor,
        "Chave 3": valor
    }

Materiais de Apoio:
    https://www.w3schools.com/python/python_dictionaries.asp

===============================================================================

Aula 04 - Built-in Functions

Materiais de Apoio:
    https://www.w3schools.com/python/python_ref_functions.asp

===============================================================================

Aula 05 - Functions (funções): linhas de códigos que executa uma função (tarefa) que pode ser reutilizada dentro do meu código, sendo flexível e modular; não gera um retorno ou saída.

Anatomia:
    Definindo a função:
        def [nome](inputs) :
            [comandos]   
    Chamando a função:
        [nome](inputs)

Materiais de Apoio:
    https://www.w3schools.com/python/python_functions.asp

===============================================================================

Aula 06 - Return (retorno): gera um output, gera um retorno ou uma saída podendo ser usado numa variável.

Anatomia:
    Definindo a função:
        def [nome](inputs) :
            [comandos]
            return variável
    Chamando a função:
        [variável] = [nome](inputs)

Materiais de Apoio:
    https://www.w3schools.com/python/gloss_python_function_return_value.asp

===============================================================================

Aula 07 - Control Flow (controle de fluxo): controle de condicionais.

Anatomia:
    if [condição]:
        [comando]
    elif [condição]:
        [comando]
    else:
        [comando]

​Materiais de Apoio:
    https://www.w3schools.com/python/python_conditions.asp

===============================================================================

Aula 08 - For Loop (laços de repetição): estruturas de repetição.

Anatomia:
    for [item] in [lista]:
        [comando]

Materiais de Apoio:
    https://www.w3schools.com/python/python_for_loops.asp
    https://www.w3schools.com/python/python_while_loops.asp

===============================================================================